<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>mongo学习笔记（三）</title>
      <link href="undefined2018/02/23/mongo%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <content type="html"><![CDATA[<p><img src="http://p4y9hsn68.bkt.clouddn.com/maxresdefault.jpg" alt="学习mongoDB查询操作"></p><p>学习mongoDB的查询(find)操作。<br><a id="more"></a></p><p>今天照着<a href="http://jspang.com/2017/12/16/mongdb/#08update" target="_blank" rel="noopener">技术胖的博客</a>继续学习了mongoDB的查询操作。</p><p>首先先把例子前提搭好：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> workmate1 = &#123;</span><br><span class="line">    name: <span class="string">'JSPang'</span>,</span><br><span class="line">    age: <span class="number">33</span>,</span><br><span class="line">    sex: <span class="number">1</span>,</span><br><span class="line">    job: <span class="string">'前端'</span>,</span><br><span class="line">    skill: &#123;</span><br><span class="line">        skillOne: <span class="string">'HTML+CSS'</span>,</span><br><span class="line">        skillTwo: <span class="string">'JavaScript'</span>,</span><br><span class="line">        skillThree: <span class="string">'PHP'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    regeditTime: <span class="keyword">new</span> <span class="built_in">Date</span>(),</span><br><span class="line">    interest: []</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> workmate2 = &#123;</span><br><span class="line">    name: <span class="string">'ShengLei'</span>,</span><br><span class="line">    age: <span class="number">31</span>,</span><br><span class="line">    sex: <span class="number">1</span>,</span><br><span class="line">    job: <span class="string">'JAVA后端'</span>,</span><br><span class="line">    skill: &#123;</span><br><span class="line">        skillOne: <span class="string">'HTML+CSS'</span>,</span><br><span class="line">        skillTwo: <span class="string">'J2EE'</span>,</span><br><span class="line">        skillThree: <span class="string">'PPT'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    regeditTime: <span class="keyword">new</span> <span class="built_in">Date</span>(),</span><br><span class="line">    interest: []</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> workmate3 = &#123;</span><br><span class="line">    name: <span class="string">'MinJie'</span>,</span><br><span class="line">    age: <span class="number">18</span>,</span><br><span class="line">    sex: <span class="number">0</span>,</span><br><span class="line">    job: <span class="string">'UI'</span>,</span><br><span class="line">    skill: &#123;</span><br><span class="line">        skillOne: <span class="string">'PhotoShop'</span>,</span><br><span class="line">        skillTwo: <span class="string">'UI'</span>,</span><br><span class="line">        skillThree: <span class="string">'PPT'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    regeditTime: <span class="keyword">new</span> <span class="built_in">Date</span>(),</span><br><span class="line">    interest: []</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> workmate4 = &#123;</span><br><span class="line">    name: <span class="string">'XiaoWang'</span>,</span><br><span class="line">    age: <span class="number">25</span>,</span><br><span class="line">    sex: <span class="number">1</span>,</span><br><span class="line">    job: <span class="string">'UI'</span>,</span><br><span class="line">    skill: &#123;</span><br><span class="line">        skillOne: <span class="string">'PhotoShop'</span>,</span><br><span class="line">        skillTwo: <span class="string">'UI'</span>,</span><br><span class="line">        skillThree: <span class="string">'PPT'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    regeditTime: <span class="keyword">new</span> <span class="built_in">Date</span>(),</span><br><span class="line">    interest: []</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> workmate5 = &#123;</span><br><span class="line">    name: <span class="string">'LiangPeng'</span>,</span><br><span class="line">    age: <span class="number">28</span>,</span><br><span class="line">    sex: <span class="number">1</span>,</span><br><span class="line">    job: <span class="string">'前端'</span>,</span><br><span class="line">    skill: &#123;</span><br><span class="line">        skillOne: <span class="string">'HTML+CSS'</span>,</span><br><span class="line">        skillTwo: <span class="string">'JavaScript'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    regeditTime: <span class="keyword">new</span> <span class="built_in">Date</span>(),</span><br><span class="line">    interest: []</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> workmate6 = &#123;</span><br><span class="line">    name: <span class="string">'HouFei'</span>,</span><br><span class="line">    age: <span class="number">25</span>,</span><br><span class="line">    sex: <span class="number">0</span>,</span><br><span class="line">    job: <span class="string">'前端'</span>,</span><br><span class="line">    skill: &#123;</span><br><span class="line">        skillOne: <span class="string">'HTML+CSS'</span>,</span><br><span class="line">        skillTwo: <span class="string">'JavaScript'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    regeditTime: <span class="keyword">new</span> <span class="built_in">Date</span>(),</span><br><span class="line">    interest: []</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> workmate7 = &#123;</span><br><span class="line">    name: <span class="string">'LiuYan'</span>,</span><br><span class="line">    age: <span class="number">35</span>,</span><br><span class="line">    sex: <span class="number">0</span>,</span><br><span class="line">    job: <span class="string">'美工'</span>,</span><br><span class="line">    skill: &#123;</span><br><span class="line">        skillOne: <span class="string">'PhotoShop'</span>,</span><br><span class="line">        skillTwo: <span class="string">'CAD'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    regeditTime: <span class="keyword">new</span> <span class="built_in">Date</span>(),</span><br><span class="line">    interest: []</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> workmate8 = &#123;</span><br><span class="line">    name: <span class="string">'DingLu'</span>,</span><br><span class="line">    age: <span class="number">20</span>,</span><br><span class="line">    sex: <span class="number">0</span>,</span><br><span class="line">    job: <span class="string">'美工'</span>,</span><br><span class="line">    skill: &#123;</span><br><span class="line">        skillOne: <span class="string">'PhotoShop'</span>,</span><br><span class="line">        skillTwo: <span class="string">'CAD'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    regeditTime: <span class="keyword">new</span> <span class="built_in">Date</span>(),</span><br><span class="line">    interest: []</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> workmate9 = &#123;</span><br><span class="line">    name: <span class="string">'JiaPeng'</span>,</span><br><span class="line">    age: <span class="number">29</span>,</span><br><span class="line">    sex: <span class="number">1</span>,</span><br><span class="line">    job: <span class="string">'前端'</span>,</span><br><span class="line">    skill: &#123;</span><br><span class="line">        skillOne: <span class="string">'HTML+CSS'</span>,</span><br><span class="line">        skillTwo: <span class="string">'JavaScript'</span>,</span><br><span class="line">        skillThree: <span class="string">'PHP'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    regeditTime: <span class="keyword">new</span> <span class="built_in">Date</span>(),</span><br><span class="line">    interest: []</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> workmate10 = &#123;</span><br><span class="line">    name: <span class="string">'LiJia'</span>,</span><br><span class="line">    age: <span class="number">26</span>,</span><br><span class="line">    sex: <span class="number">0</span>,</span><br><span class="line">    job: <span class="string">'前端'</span>,</span><br><span class="line">    skill: &#123;</span><br><span class="line">        skillOne: <span class="string">'HTML+CSS'</span>,</span><br><span class="line">        skillTwo: <span class="string">'JavaScript'</span>,</span><br><span class="line">        skillThree: <span class="string">'PHP'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    regeditTime: <span class="keyword">new</span> <span class="built_in">Date</span>(),</span><br><span class="line">    interest: []</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> db = connect(<span class="string">'company'</span>);</span><br><span class="line"><span class="keyword">var</span> workmateArray = [workmate1, workmate2, workmate3, workmate4, workmate5, workmate6, workmate7, workmate8, workmate9, workmate10];</span><br><span class="line">db.workmate.insert(workmateArray);</span><br><span class="line">print(<span class="string">'[SUCCESS]：The data was inserted successfully'</span>);</span><br></pre></td></tr></table></figure></p><h4 id="简单查找"><a href="#简单查找" class="headerlink" title="简单查找"></a>简单查找</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//简单查找</span></span><br><span class="line">db.workmate.find();</span><br><span class="line"><span class="comment">//根据条件查找</span></span><br><span class="line">db.workmate.find(&#123; <span class="string">"skill.skillOne"</span>: <span class="string">"HTML+CSS"</span> &#125;, &#123; <span class="attr">name</span>: <span class="literal">true</span> &#125;);</span><br></pre></td></tr></table></figure><h4 id="不等修饰符"><a href="#不等修饰符" class="headerlink" title="不等修饰符"></a>不等修饰符</h4><blockquote><p>小于(<strong>$lt</strong>):英文全称 less-than</p><p>小于等于(<strong>$lte</strong>)：英文全称 less-than-equal</p><p>大于(<strong>$gt</strong>):英文全称 greater-than</p><p>大于等于(<strong>$gte</strong>):英文全称 greater-than-equal</p><p>不等于(<strong>$ne</strong>):英文全称 not-equal</p></blockquote><p>可以根据不等修饰符进行查询。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查找年龄小于30大于25岁的人</span></span><br><span class="line">db.workmate.find(</span><br><span class="line">    &#123; <span class="attr">age</span>: &#123; <span class="attr">$lte</span>: <span class="number">30</span>, <span class="attr">$gte</span>: <span class="number">25</span> &#125; &#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="literal">true</span>, <span class="attr">age</span>: <span class="literal">true</span>, <span class="string">"skill.skillOne"</span>: <span class="literal">true</span>, <span class="attr">_id</span>: <span class="literal">false</span> &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="in修饰符"><a href="#in修饰符" class="headerlink" title="$in修饰符"></a>$in修饰符</h4><p>可以进行一个键多个值的查询。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查找年龄为25和33的人</span></span><br><span class="line">db.workmate.find(</span><br><span class="line">    &#123; <span class="attr">age</span>: &#123; <span class="attr">$in</span>: [<span class="number">25</span>, <span class="number">33</span>] &#125; &#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="number">1</span>, <span class="attr">_id</span>: <span class="number">0</span> &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="or修饰符"><a href="#or修饰符" class="headerlink" title="$or修饰符"></a>$or修饰符</h4><p>同时进行多个键值的查询。或逻辑。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查找年龄大于30或第三项技能为PHP的人</span></span><br><span class="line">db.workmate.find(</span><br><span class="line">    &#123;</span><br><span class="line">        $or: [</span><br><span class="line">            &#123; <span class="attr">age</span>: &#123; <span class="attr">$gte</span>: <span class="number">30</span> &#125; &#125;,</span><br><span class="line">            &#123; <span class="string">"skill.skillThree"</span>: <span class="string">"PHP"</span> &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="number">1</span>, <span class="attr">age</span>: <span class="number">1</span>, <span class="string">"skill.skillThree"</span>: <span class="number">1</span>, <span class="attr">_id</span>: <span class="number">0</span> &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="and修饰符"><a href="#and修饰符" class="headerlink" title="$and修饰符"></a>$and修饰符</h4><p>同时进行多个键值的查询。与逻辑。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查找年龄大于30并且第三项技能为PHP的人</span></span><br><span class="line">db.workmate.find(</span><br><span class="line">    &#123;</span><br><span class="line">        $and: [</span><br><span class="line">            &#123; <span class="attr">age</span>: &#123; <span class="attr">$gte</span>: <span class="number">30</span> &#125; &#125;,</span><br><span class="line">            &#123; <span class="string">"skill.skillThree"</span>: <span class="string">"PHP"</span> &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="number">1</span>, <span class="attr">age</span>: <span class="number">1</span>, <span class="string">"skill.skillThree"</span>: <span class="number">1</span>, <span class="attr">_id</span>: <span class="number">0</span> &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="find在js文本中的使用"><a href="#find在js文本中的使用" class="headerlink" title="find在js文本中的使用"></a>find在js文本中的使用</h4><p>使用find进行查询也可以像之前使用update操作一样，将语句写在一个js文件中，然后通过load方法执行该js文件即可。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> db = connect(<span class="string">'company'</span>);</span><br><span class="line"><span class="keyword">var</span> result = db.workmate.find();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(result.hasNext()) &#123;</span><br><span class="line">    printjson(result.next());</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印查询到的所有记录</span></span><br></pre></td></tr></table></figure><p>除了使用while循环，也可以使用forEach，更加方便优雅。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> db = connect(<span class="string">'company'</span>);</span><br><span class="line"><span class="keyword">var</span> result = db.workmate.find();</span><br><span class="line"></span><br><span class="line">result.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">    printjson(res);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>mongo学习笔记（二）</title>
      <link href="undefined2018/02/21/mongo%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <content type="html"><![CDATA[<p><img src="http://p4y9hsn68.bkt.clouddn.com/mongodb.png" alt="学习mongoDB更新操作 | 900*0"></p><p>学习mongoDB的修改(update)操作。<br><a id="more"></a></p><p>昨晚跟朋友出去浪了，没有继续学习，只能今天学习然后更下博客啦。</p><p>今天照着<a href="http://jspang.com/2017/12/16/mongdb/#08update" target="_blank" rel="noopener">技术胖的博客</a>继续学习了mongoDB的更新操作。</p><p>首先先把例子前提搭好：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> workmate =&#123; </span><br><span class="line">    name:<span class="string">'Mike'</span>,</span><br><span class="line">    age:<span class="number">20</span>,</span><br><span class="line">    sex:<span class="number">1</span>,</span><br><span class="line">    job:<span class="string">'UI设计'</span>,</span><br><span class="line">    skill:&#123;</span><br><span class="line">        skillOne:<span class="string">'PhotoShop'</span>,</span><br><span class="line">        SkillTwo:<span class="string">'UI'</span>,</span><br><span class="line">        SkillThree:<span class="string">'Word+Excel+PPT'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    regeditTime:<span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> db = connect(<span class="string">'company'</span>);</span><br><span class="line"><span class="comment">//创建company数据库</span></span><br><span class="line">db.workmate.insert(workmate);</span><br><span class="line"><span class="comment">//新建workmate集合</span></span><br></pre></td></tr></table></figure></p><h5 id="set修改器"><a href="#set修改器" class="headerlink" title="$set修改器"></a>$set修改器</h5><p>用来修改一个指定的键值(key)。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.workmate.update(&#123;<span class="attr">name</span>: <span class="string">"Mike"</span>&#125;, &#123;<span class="attr">$set</span>:&#123;<span class="attr">age</span>:<span class="number">22</span>&#125;&#125;);</span><br></pre></td></tr></table></figure></p><p>而对于文档内嵌文档的修改方式。使用点操作符</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.workmate.update(&#123;<span class="attr">name</span>: <span class="string">"Mike"</span>&#125;, &#123;<span class="attr">$set</span>: &#123;<span class="string">"skill.SkillThree"</span>: <span class="string">"word"</span>&#125;&#125;);</span><br></pre></td></tr></table></figure><h5 id="unset修改器"><a href="#unset修改器" class="headerlink" title="$unset修改器"></a>$unset修改器</h5><p>用于删除指定的key</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.workmate.update(&#123;<span class="attr">name</span>: <span class="string">"Mike"</span>&#125;, &#123;<span class="attr">$unset</span>: &#123;<span class="attr">age</span>: <span class="string">''</span>&#125;&#125;);</span><br></pre></td></tr></table></figure><h5 id="inc修改器"><a href="#inc修改器" class="headerlink" title="$inc修改器"></a>$inc修改器</h5><p>对数据进行修改</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.workmate.update(&#123;<span class="attr">name</span>: <span class="string">"Mike"</span>&#125;, &#123;<span class="attr">$inc</span>: &#123;<span class="attr">age</span>: <span class="number">-2</span>&#125;&#125;);</span><br><span class="line"><span class="comment">//直接减2得到想要的数字。这里想要得到18，而原本是20</span></span><br></pre></td></tr></table></figure><h5 id="multi"><a href="#multi" class="headerlink" title="multi"></a>multi</h5><p>为所有的数据都添加上一个字段。设置<code>multi</code>为<code>true</code>，否则只为第一个数据增加了字段</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.workmate.update(&#123;&#125;, &#123;<span class="attr">$set</span>: &#123;<span class="attr">interest</span>: []&#125;&#125;, &#123;<span class="attr">multi</span>: <span class="literal">true</span>&#125;);</span><br></pre></td></tr></table></figure><p>此时所有数据都添加上了<code>interest</code>这个字段。</p><h5 id="upsert"><a href="#upsert" class="headerlink" title="upsert"></a>upsert</h5><p>当需要新增数据时，<strong>upsert</strong>在找不到值的情况下，可以直接插入这条数据。设置<code>upsert</code>为<code>true</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.workmate.update(&#123;<span class="attr">name</span>: <span class="string">"John"</span>&#125;, &#123;<span class="attr">$set</span>: &#123;<span class="attr">age</span>: <span class="number">20</span>&#125;&#125;, &#123;<span class="attr">upsert</span>: <span class="literal">true</span>&#125;);</span><br></pre></td></tr></table></figure><p>运行结果显示，新增了<code>John</code>这一行数据。</p><h5 id="push"><a href="#push" class="headerlink" title="$push"></a>$push</h5><p>用于操作数组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.workmate.update(&#123;<span class="attr">name</span>: <span class="string">"John"</span>&#125;, &#123;<span class="attr">$push</span>: &#123;<span class="attr">interest</span>: <span class="string">'draw'</span>&#125;&#125;);</span><br><span class="line"><span class="comment">//为interest数组新增了'draw'的元素</span></span><br></pre></td></tr></table></figure><h5 id="ne"><a href="#ne" class="headerlink" title="$ne"></a>$ne</h5><p><strong>$ne</strong>主要的作用是，检查一个值是否存在，如果不存在再执行操作，存在就不执行。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.workmate.update(&#123; <span class="attr">name</span>: <span class="string">"John"</span>, <span class="attr">interest</span>: &#123; <span class="attr">$ne</span>: <span class="string">"playGame"</span> &#125; &#125;, &#123; <span class="attr">$push</span>: &#123; <span class="attr">interest</span>: <span class="string">"Game"</span> &#125; &#125;);</span><br><span class="line"><span class="comment">//如果interest中有playGame，则不添加Game。否则添加</span></span><br></pre></td></tr></table></figure><h5 id="addToSet"><a href="#addToSet" class="headerlink" title="$addToSet"></a>$addToSet</h5><p>查找是否存在，不存在就push上去。相比<strong>$ne</strong>更容易理解。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.workmate.update(&#123; <span class="attr">name</span>: <span class="string">"John"</span> &#125;, &#123; <span class="attr">$addToSet</span>: &#123; <span class="attr">interest</span>: <span class="string">"readBook"</span> &#125; &#125;)</span><br><span class="line"><span class="comment">//interest数组中不存在'readBook'，则将'readBook'添加上</span></span><br></pre></td></tr></table></figure><h5 id="each修改器"><a href="#each修改器" class="headerlink" title="$each修改器"></a>$each修改器</h5><p>它可以传入一个数组，一次增加多个值进去。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> newInterset = [<span class="string">"Sing"</span>, <span class="string">"Dance"</span>, <span class="string">"Code"</span>];</span><br><span class="line">db.workmate.update(&#123; <span class="attr">name</span>: <span class="string">"John"</span> &#125;, &#123; <span class="attr">$addToSet</span>: &#123; <span class="attr">interest</span>: &#123; <span class="attr">$each</span>: newInterset &#125; &#125; &#125;)</span><br></pre></td></tr></table></figure><h5 id="pop"><a href="#pop" class="headerlink" title="$pop"></a>$pop</h5><p>用于删除数组值。</p><blockquote><p><strong>$pop</strong>只删除一次，并不是删除所有数组中的值。而且它有两个选项，一个是1和-1。<br>    <strong>1</strong>：从数组<strong>尾部</strong>进行删除<br>    <strong>-1</strong>：从数组<strong>头部</strong>进行删除</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.workmate.update(&#123; <span class="attr">name</span>: <span class="string">'John'</span> &#125;, &#123; <span class="attr">$pop</span>: &#123; <span class="attr">interest</span>: <span class="number">1</span> &#125; &#125;)</span><br></pre></td></tr></table></figure><p>接下来看一点高级的<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.workmate.update(&#123;<span class="attr">sex</span>: <span class="number">1</span>&#125;, &#123;<span class="attr">$set</span>: &#123;<span class="attr">money</span>: <span class="number">1000</span>&#125;&#125;, <span class="literal">false</span>, <span class="literal">true</span>);</span><br><span class="line"><span class="comment">//上面一句等同于这一句：db.workmate.update(&#123;sex: 1&#125;, &#123;$set: &#123;money: 1000&#125;&#125;, &#123;upsert: false&#125;, &#123;multi: true&#125;);</span></span><br></pre></td></tr></table></figure></p><p>与之有异曲同工之妙的如下语句</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myModify = &#123;</span><br><span class="line">    findAndModify: <span class="string">'workmate'</span>,<span class="comment">//需要查找或修改的集合</span></span><br><span class="line">    query: <span class="string">'Mike'</span>,<span class="comment">//指定哪条数据</span></span><br><span class="line">    update: &#123;<span class="attr">$set</span>: &#123;<span class="attr">age</span>: <span class="number">29</span>&#125;&#125;,<span class="comment">//进行修改</span></span><br><span class="line">    <span class="keyword">new</span>: <span class="literal">true</span> <span class="comment">//返回更新前的文档(false)还是更新后的文档(true)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> resultMessage = db.runCommand(myModify);<span class="comment">//使用runCommand来执行语句</span></span><br><span class="line">printjson(resultMessage);<span class="comment">//以json形式打印结果</span></span><br></pre></td></tr></table></figure><blockquote><p>runCommand可以执行数据库操作的语句</p></blockquote><p><strong>两者都是执行更新操作，但是后者的安全性能相对较高，更加值得学习。</strong></p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>mongo学习笔记(一)</title>
      <link href="undefined2018/02/20/mongo%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <content type="html"><![CDATA[<p><img src="http://p4y9hsn68.bkt.clouddn.com/MW-FU909_mongod_20170922140731_ZH.jpg" alt="mongoDB学习笔记"></p><p>开始学习mongoDB。<br><a id="more"></a></p><h4 id="MongoDB简介"><a href="#MongoDB简介" class="headerlink" title="MongoDB简介"></a>MongoDB简介</h4><blockquote><p>MongoDB是一个基于分布式文件存储的数据库，由C++语言编写。目的是为WEB应用提供扩展的高性能的数据存储解决方案。MongoDB是一个介于关系型数据库和非关系型数据库之间的产品，是非关系型数据库当中功能最丰富，最像关系数据库的。他支持的数据结构非常松散，是类似json的bson格式，因此可以存储比较复杂的数据类型。Mongo最大的特点是他支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。</p></blockquote><h4 id="开始安装MongoDB"><a href="#开始安装MongoDB" class="headerlink" title="开始安装MongoDB"></a>开始安装MongoDB</h4><h5 id="安装步骤："><a href="#安装步骤：" class="headerlink" title="安装步骤："></a>安装步骤：</h5><ol><li>去官网下载<strong>MongoDB</strong>，<a href="https://www.mongodb.com/" target="_blank" rel="noopener">https://www.mongodb.com/</a>，在网站中找到Download按钮进行下载。</li><li>下载后进行安装，默认配置一直安装下去就可以了。</li><li>安装完成后，需要配置“环境变量”，目的是再命令行中直接使用，而不需要输入很长的路径。</li></ol><h4 id="运行MongoDB服务端"><a href="#运行MongoDB服务端" class="headerlink" title="运行MongoDB服务端"></a>运行MongoDB服务端</h4><p>安装好MongoDB数据库后，我们需要启用服务端才能使用。启用服务的命令是<code>mongod</code>。<br>打开命令行，执行<code>mongod</code>。在命令中直接输入<code>mongod</code>，但是你会发现服务并没有启动，报了一个exception，服务停止了。这是因为我们需要在安装盘的根目录，建立data/db,这两个mongodb需要文件夹。<br>新建所需文件夹之后再次运行<code>mongod</code>，这时候服务就可以开启了，链接默认端口是<strong>27017</strong>。</p><h4 id="链接MongoDB服务端"><a href="#链接MongoDB服务端" class="headerlink" title="链接MongoDB服务端"></a>链接MongoDB服务端</h4><p>开启MongoDB服务器之后，我们需要进行链接。命令行操作为<code>mongo</code>。</p><h4 id="一些常用的mongo基本命令"><a href="#一些常用的mongo基本命令" class="headerlink" title="一些常用的mongo基本命令"></a>一些常用的mongo基本命令</h4><p>我们都知道关系型的数据库，如mysql，oracle等都是采用SQL语句进行数据库增删查改的。而非关系型数据库中的佼佼者MongoDB则采用前端人员熟知的JavaScript语言进行数据库操作。<br>可以来一段代码看看：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tobee</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"welcome to tobee's blog"</span>;</span><br><span class="line">&#125;</span><br><span class="line">print(tobee()); <span class="comment">//使用print进行打印而不能再使用console.log</span></span><br></pre></td></tr></table></figure><h5 id="一些基础命令"><a href="#一些基础命令" class="headerlink" title="一些基础命令"></a>一些基础命令</h5><p><code>show dbs</code>  ——  查看存在的数据库。原始存在<strong>admin</strong>和<strong>local</strong>两个数据库<br><code>db.version()</code>  ——  查看数据库版本<br><code>db</code>  ——  显示当前使用的数据库的名称<br><code>use XXX</code>   ——  切换至某个数据库（若没有，则新建）<br><code>show collection</code>  ——  查看数据库的集合<br><code>db.集合.insert()</code>  ——  新建数据集合和插入文件。如<code>db.user.insert({&quot;name&quot;:&quot;tobee&quot;})</code><br><code>db.集合.find()</code>  ——  查询所有数据<br><code>db.集合.update({查询条件}，{修改条件})</code>  ——  修改文件数据<br><code>db.集合.remove(条件)</code> ——  删除文件数据。如<code>db.user.remove({&quot;name&quot;:&quot;tobee&quot;})</code></p><h4 id="用js文件写mongo命令"><a href="#用js文件写mongo命令" class="headerlink" title="用js文件写mongo命令"></a>用js文件写mongo命令</h4><p>我们如果在命令行对我们数据库中的文件增删查改的话，会发现操作起来十分麻烦。这时候我们可以将需要操作的命令全部写在一个js文件中，再用mongo命令执行就可以了。</p><ul><li>新建test.js，在其中新建一个数据库</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> db = connect(<span class="string">"user"</span>); <span class="comment">//有则连接，没有则创建</span></span><br></pre></td></tr></table></figure><ul><li>终端执行命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo test.js</span><br></pre></td></tr></table></figure><p>此时js文件中的mongo命令会被执行。</p><p>今天下午就先学这些，巩固下。晚上再继续学继续更新。对了，我是在技术胖的博客上学习的，超棒，推荐给大家。<a href="http://jspang.com/2017/12/16/mongdb/" target="_blank" rel="noopener">http://jspang.com/2017/12/16/mongdb/</a></p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>重拾git</title>
      <link href="undefined2018/02/20/%E9%87%8D%E6%8B%BEgit/"/>
      <content type="html"><![CDATA[<p><img src="http://p4y9hsn68.bkt.clouddn.com/git.jpg" alt="git微教程"></p><p>来聊聊git。<br><a id="more"></a><br>从我接触<strong>git</strong>开始算起应该是有半年多的时间了，那时候需要帮学校朋友的一个小项目写一个移动端网页然后让大家可以访问，后来了解到GitHub page就可以做到无需购买域名和服务器就可以帮我们托管自己的网站。所以我开始学习git然后现在重新回想下记录下来。</p><h4 id="git"><a href="#git" class="headerlink" title="git"></a>git</h4><blockquote><p>Git是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。<br>Git是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。Git 是 Linus Torvalds(Linux的发明者) 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p></blockquote><h4 id="一步一步来"><a href="#一步一步来" class="headerlink" title="一步一步来"></a>一步一步来</h4><ul><li>先登录GitHub，手动创建新仓库，并复制新的git地址</li><li>首先在目的目录下，右键进入<code>git bash</code></li><li><p>然后<code>git init</code>初始化，让文件夹变成git可管理的仓库<br><code>git add</code>文件名 ：将指定文件上传至暂存区<br><code>git commit -m 相关信息</code> ：将暂存区内容提交到主分支上<br>此时若是第一次使用git上传文件，会提示进行相关内容的配置<br><code>git config --global user.email &quot;your @example.com&quot;</code><br><code>git config --global user.name &quot;your name&quot;</code><br><code>git remote rm origin</code><br><code>git remote add origin &quot;git地址&quot;</code>：将分支与远程仓库地址进行关联<br><code>git push -u origin master</code> ：将本地仓库文件提交到远程仓库</p></li><li><p>此时若发现没有权限，需要公钥</p><ul><li><code>ssh-keygen -t rsa -C &quot;邮箱&quot;</code> (一路回车)</li><li>在<code>GitHub</code>的<code>setting</code>界面左边点选<code>SSH and GPG keys</code>，右上角选<code>News SSH key</code></li><li>打开<code>c:/user/administer/.ssh/</code>目录(因人而异哦)，打开<code>id_rsa.pub</code>文件，将其复制到<code>GitHub</code>的<code>key</code>中，<code>title</code>任意输入<br>此时可以开始提交文件至远程仓库，即<code>git push -u origin master</code></li></ul></li><li><p>git clone git地址 ：git克隆项目</p></li></ul><h4 id="一些错误解决方法"><a href="#一些错误解决方法" class="headerlink" title="一些错误解决方法"></a>一些错误解决方法</h4><ol><li>提示出错信息：<code>fatal: remote origin already exists</code><br>输入<code>git remote rm origin</code>，再输入<code>git remote add origin &quot;git地址&quot;</code>。或者直接push</li><li>当远程仓库有一些本地文件没有的文件时，也会报错。此时先全部pull下来，再重新push上去</li></ol><p>更多的git教程可参考廖雪峰的官方教程→<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">Git教程</a></p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>杂想</title>
      <link href="undefined2018/02/19/%E6%9D%82%E6%83%B3/"/>
      <content type="html"><![CDATA[<p>大年初四。just try it<br><a id="more"></a><br>今天花了一个下午还有晚上的时间利用hexo和GitHub page搭建了属于自己的博客并对其做了个性化的DIY，同时也进行了前两篇博客的撰写，之后可能要买个域名将其解析到GitHub page上。接下来，我会将以前在没有博客的时候总结的一些学习上的坑都用博客的方式重新记录下来，勉励自己，同时也希望帮到别人，哪怕一个人。而且接下来的学习生涯也会在博客上留下我的足迹。</p><p>祝大家新年快乐。</p>]]></content>
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>对hexo中Next主题的DIY</title>
      <link href="undefined2018/02/19/%E5%AF%B9hexo%E4%B8%ADNext%E4%B8%BB%E9%A2%98%E7%9A%84DIY/"/>
      <content type="html"><![CDATA[<p><img src="http://img.cduyzh.com/images/hexo-pages3.jpg" alt="DIY Next主题"></p><p>总要有点追求，年轻人。<br><a id="more"></a><br>在搭建好了自己的博客之后，发现网上有很多大神都自己DIY了这个<strong>Next</strong>主题。于是我翻阅了好几篇文章还有<strong>Hexo</strong>和<strong>Next</strong>的官方文档之后，开始着手进行这个主题的DIY。</p><h4 id="文章主页添加阴影"><a href="#文章主页添加阴影" class="headerlink" title="文章主页添加阴影"></a>文章主页添加阴影</h4><p>打开<code>\themes\next\source\css\_custom\custom.styl</code>，向里面加入：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.post</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">60px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">60px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">25px</span>;</span><br><span class="line">  <span class="attribute">-webkit-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(202, 203, 203, .5);</span><br><span class="line">  <span class="attribute">-moz-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(202, 203, 204, .5);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="在右上角或者左上角实现fork-me-on-github"><a href="#在右上角或者左上角实现fork-me-on-github" class="headerlink" title="在右上角或者左上角实现fork me on github"></a>在右上角或者左上角实现fork me on github</h4><p>→<a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="noopener">字母版</a><br>→<a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">图案版</a><br>挑选自己喜欢的样式，并复制代码。然后粘贴刚才复制的代码到<code>themes/next/layout/_layout.swig</code>文件中(放在<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>的下面)，并把<code>href</code>改为你的github地址。</p><h4 id="添加动态背景"><a href="#添加动态背景" class="headerlink" title="添加动态背景"></a>添加动态背景</h4><p>如果next主题在5.1.1以上的话就可以简单点设置，直接在主题配置文件<code>_config.yml</code>中找到<code>canvas_nest: false</code>或者<code>three_waves:false</code>，把它相应改为true就行了（注意分号后面要加一个空格）。</p><h4 id="实现点击界面出现桃心效果"><a href="#实现点击界面出现桃心效果" class="headerlink" title="实现点击界面出现桃心效果"></a>实现点击界面出现桃心效果</h4><p>在网址输入如下<br><code>http://7u2ss1.com1.z0.glb.clouddn.com/love.js</code><br>然后将里面的代码copy一下，新建<code>love.js</code>文件并且将代码复制进去，然后保存。将<code>love.js</code>文件放到路径<code>/themes/next/source/js/src</code>里面，然后打开<code>\themes\next\layout\_layout.swig</code>文件,在末尾（在前面引用会出现找不到的bug）添加以下代码：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/love.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><h4 id="在网站底部加上访问量"><a href="#在网站底部加上访问量" class="headerlink" title="在网站底部加上访问量"></a>在网站底部加上访问量</h4><p>打开主题配置文件<code>\themes\next\_config.yml</code>，在其中找到<code>busuanzi_count</code>，将参数<code>enable</code>改为<code>true</code>。接着在文件<code>\themes\next\layout\_partials\footer.swig</code>中的合适位置上加上如下参考代码，<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"powered-by"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-user-md"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_uv"</span>&gt;</span></span><br><span class="line">  本站访客数:<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="网站底部字数统计"><a href="#网站底部字数统计" class="headerlink" title="网站底部字数统计"></a>网站底部字数统计</h4><p>在命令行使用npm安装hexo-wordcount<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure></p><p>然后在<code>/themes/next/layout/_partials/footer.swig</code>文件尾部加上：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"theme-info"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"powered-by"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-count"</span>&gt;</span>博客全站共&#123;&#123; totalcount(site) &#125;&#125;字<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="实现统计功能"><a href="#实现统计功能" class="headerlink" title="实现统计功能"></a>实现统计功能</h4><p>在命令行使用npm安装hexo-wordcount<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure></p><p> 然后在主题的配置文件<code>_config.yml</code>中，配置如下：</p><blockquote><p><code># Post wordcount display settings</code><br><code># Dependencies: https://github.com/willin/hexo-wordcount</code><br>post_wordcount:<br>  item_text: true<br>  wordcount: true<br>  min2read: true</p></blockquote><h4 id="参考来源（感谢-）"><a href="#参考来源（感谢-）" class="headerlink" title="参考来源（感谢~）"></a>参考来源（感谢~）</h4><p><a href="http://blog.csdn.net/qq_33699981/article/details/72716951" target="_blank" rel="noopener">http://blog.csdn.net/qq_33699981/article/details/72716951</a><br><a href="http://www.cduyzh.com/hexo-settings-4/" target="_blank" rel="noopener">http://www.cduyzh.com/hexo-settings-4/</a></p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>遇见hexo</title>
      <link href="undefined2018/02/19/%E9%81%87%E8%A7%81hexo/"/>
      <content type="html"><![CDATA[<p><img src="http://p4y9hsn68.bkt.clouddn.com/v2-d4c1239e75c02e8482c22017a6c8d407_r.jpg" alt="github page与hexo搭建博客"></p><p>一篇水水的技术分享。大佬勿喷<br><a id="more"></a><br>大概很久之前就想拥有属于自己的博客了，自己是想完全靠自己搭建一个包括网站源代码，域名服务器购买，网站备案都由自己搞定，但是总是没时间后来就忘记了。之后听说<strong>Hexo</strong>可以帮我们搭建属于自己的博客而且也没有其他现有博客那么多限制，可以自己DIY。于是我就跟着<strong>hexo</strong>官方文档还有<strong>Next</strong>主题的官方文档一步一步搭建起现在的这个博客。接下来分享一些搭建时候的心路历程。</p><h4 id="HEXO"><a href="#HEXO" class="headerlink" title="HEXO"></a>HEXO</h4><blockquote><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Heroku上，是搭建博客的首选框架。这里我选用的是GitHub。如果想要更加全面的了解Hexo，可以到其官网了解更多的细节。</p></blockquote><h4 id="下载node，git"><a href="#下载node，git" class="headerlink" title="下载node，git"></a>下载node，git</h4><p>在下载git的过程中不要点击“仅仅使用git bash”，点击“与Windows命令行结合”，<strong>本人遇到的坑就在这里</strong>，使用命令行输入稍后将要输入的命令<code>hexo d</code>进行部署的时候报了错，需要在git bash输入这句语句才有效。</p><h4 id="GitHub-page的配置"><a href="#GitHub-page的配置" class="headerlink" title="GitHub page的配置"></a>GitHub page的配置</h4><p>去到GitHub新增一个仓库，名字跟用户名一样，如“yourname.github.io”。</p><h4 id="用SSH-keys关联Hexo与Github-Pages"><a href="#用SSH-keys关联Hexo与Github-Pages" class="headerlink" title="用SSH keys关联Hexo与Github Pages"></a>用SSH keys关联Hexo与Github Pages</h4><p>在git bash中输入语句<code>ssh-keygen -t rsa -C &quot;注册Git的邮箱地址&quot;</code>。<br>接着会生成一个密钥，去到存放这个密钥的文件夹中找到id_rsa.pub，如“C:\Users\Administrator.ssh”，将其中内容复制粘贴到<a href="https://github.com/settings/ssh" target="_blank" rel="noopener">https://github.com/settings/ssh</a> 的 new SSH key中。接着输入<code>ssh -T git@github.com</code>查看是否设置成功。</p><h4 id="新建文件夹放置博客内容"><a href="#新建文件夹放置博客内容" class="headerlink" title="新建文件夹放置博客内容"></a>新建文件夹放置博客内容</h4><p>在命令行使用npm安装hexo，步骤如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure></p><p>此时在浏览器中打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 就可以浏览博客了。</p><h4 id="配置Deployment"><a href="#配置Deployment" class="headerlink" title="配置Deployment"></a>配置Deployment</h4><p>在_config.yml文件中，找到Deployment，然后按照如下修改：</p><blockquote><p><code># Deployment</code><br><code>## Docs:https://hexo.io/docs/deployment.html</code><br>deploy:<br>  type: git<br>  repo: git@github.com:yourname/yourname.github.io.git<br>  branch: master</p></blockquote><h4 id="本地文件提交到Git-Pages"><a href="#本地文件提交到Git-Pages" class="headerlink" title="本地文件提交到Git Pages"></a>本地文件提交到Git Pages</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 删除旧的 public 文件</span><br><span class="line">hexo clean</span><br><span class="line">// 生成新的 public 文件</span><br><span class="line">hexo generate</span><br><span class="line">或者</span><br><span class="line">hexo g</span><br><span class="line">// 开始部署</span><br><span class="line">hexo deploye</span><br><span class="line">或者</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>需要安装一个扩展<br> <code>npm install hexo-deployer-git --save</code><br>然后在浏览器中输入 https:/yourname.github.io （用户名改成你的）看到了 Hexo 与 GitHub Pages 已经成功关联了。至此博客就算搞定啦~</p><h4 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h4><p><a href="https://segmentfault.com/a/1190000012008319" target="_blank" rel="noopener">即将成为史上最具用户体验的Hexo+GitHub Pages搭建博客的教程</a></p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
  
  
</search>
