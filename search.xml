<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[对hexo中Next主题的DIY]]></title>
    <url>%2F2018%2F02%2F19%2F%E5%AF%B9hexo%E4%B8%ADNext%E4%B8%BB%E9%A2%98%E7%9A%84DIY%2F</url>
    <content type="text"><![CDATA[总要有点追求，年轻人。在搭建好了自己的博客之后，发现网上有很多大神都自己DIY了这个Next主题。于是我翻阅了好几篇文章还有Hexo和Next的官方文档之后，开始着手进行这个主题的DIY。 文章主页添加阴影打开\themes\next\source\css\_custom\custom.styl，向里面加入： 1234567.post &#123; margin-top: 60px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5); &#125; 在右上角或者左上角实现fork me on github→字母版→图案版挑选自己喜欢的样式，并复制代码。然后粘贴刚才复制的代码到themes/next/layout/_layout.swig文件中(放在&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;的下面)，并把href改为你的github地址。 添加动态背景如果next主题在5.1.1以上的话就可以简单点设置，直接在主题配置文件_config.yml中找到canvas_nest: false或者three_waves:false，把它相应改为true就行了（注意分号后面要加一个空格）。 实现点击界面出现桃心效果在网址输入如下http://7u2ss1.com1.z0.glb.clouddn.com/love.js然后将里面的代码copy一下，新建love.js文件并且将代码复制进去，然后保存。将love.js文件放到路径/themes/next/source/js/src里面，然后打开\themes\next\layout\_layout.swig文件,在末尾（在前面引用会出现找不到的bug）添加以下代码：12&lt;!-- 页面点击小红心 --&gt;&lt;script type="text/javascript" src="/js/src/love.js"&gt;&lt;/script&gt; 在网站底部加上访问量打开主题配置文件\themes\next\_config.yml，在其中找到busuanzi_count，将参数enable改为true。接着在文件\themes\next\layout\_partials\footer.swig中的合适位置上加上如下参考代码，12345&lt;div class=&quot;powered-by&quot;&gt;&lt;i class=&quot;fa fa-user-md&quot;&gt;&lt;/i&gt;&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt; 本站访客数:&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt; 网站底部字数统计在命令行使用npm安装hexo-wordcount1npm install hexo-wordcount --save 然后在/themes/next/layout/_partials/footer.swig文件尾部加上：1234&lt;div class="theme-info"&gt; &lt;div class="powered-by"&gt;&lt;/div&gt; &lt;span class="post-count"&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;&lt;/div&gt; 实现统计功能在命令行使用npm安装hexo-wordcount1npm install hexo-wordcount --save 然后在主题的配置文件_config.yml中，配置如下： # Post wordcount display settings# Dependencies: https://github.com/willin/hexo-wordcountpost_wordcount: item_text: true wordcount: true min2read: true 参考来源（感谢~）http://blog.csdn.net/qq_33699981/article/details/72716951http://www.cduyzh.com/hexo-settings-4/]]></content>
      <categories>
        <category>技术</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[遇见hexo]]></title>
    <url>%2F2018%2F02%2F19%2F%E9%81%87%E8%A7%81hexo%2F</url>
    <content type="text"><![CDATA[一篇水水的技术分享。大佬勿喷大概很久之前就想拥有属于自己的博客了，自己是想完全靠自己搭建一个包括网站源代码，域名服务器购买，网站备案都由自己搞定，但是总是没时间后来就忘记了。之后听说Hexo可以帮我们搭建属于自己的博客而且也没有其他现有博客那么多限制，可以自己DIY。于是我就跟着hexo官方文档还有Next主题的官方文档一步一步搭建起现在的这个博客。接下来分享一些搭建时候的心路历程。 HEXO Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Heroku上，是搭建博客的首选框架。这里我选用的是GitHub。如果想要更加全面的了解Hexo，可以到其官网了解更多的细节。 下载node，git在下载git的过程中不要点击“仅仅使用git bash”，点击“与Windows命令行结合”，本人遇到的坑就在这里，使用命令行输入稍后将要输入的命令hexo d进行部署的时候报了错，需要在git bash输入这句语句才有效。 GitHub page的配置去到GitHub新增一个仓库，名字跟用户名一样，如“yourname.github.io”。 用SSH keys关联Hexo与Github Pages在git bash中输入语句ssh-keygen -t rsa -C &quot;注册Git的邮箱地址&quot;。接着会生成一个密钥，去到存放这个密钥的文件夹中找到id_rsa.pub，如“C:\Users\Administrator.ssh”，将其中内容复制粘贴到https://github.com/settings/ssh 的 new SSH key中。接着输入ssh -T git@github.com查看是否设置成功。 新建文件夹放置博客内容在命令行使用npm安装hexo，步骤如下：12345npm install hexo-cli -ghexo init blogcd blognpm installhexo server 此时在浏览器中打开http://localhost:4000/ 就可以浏览博客了。 配置Deployment在_config.yml文件中，找到Deployment，然后按照如下修改： # Deployment## Docs:https://hexo.io/docs/deployment.htmldeploy: type: git repo: git@github.com:yourname/yourname.github.io.git branch: master&gt; 本地文件提交到Git Pages12345678910// 删除旧的 public 文件hexo clean/// 生成新的 public 文件hexo generate或者hexo g// 开始部署hexo deploye或者hexo d 需要安装一个扩展 npm install hexo-deployer-git --save然后在浏览器中输入 https:/yourname.github.io （用户名改成你的）看到了 Hexo 与 GitHub Pages 已经成功关联了。至此博客就算搞定啦~]]></content>
      <categories>
        <category>技术</category>
      </categories>
  </entry>
</search>
